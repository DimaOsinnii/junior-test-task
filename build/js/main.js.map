{"version":3,"sources":["email.js","main.js"],"names":["Email","send","a","Promise","n","e","nocache","floor","Math","random","Action","JSON","stringify","ajaxPost","t","createCORSRequest","setRequestHeader","onload","responseText","XMLHttpRequest","open","XDomainRequest","email","document","getElementById","buttonSubmit","messageResult","querySelector","sendResult","yourToken","emailToSendFrom","emailSubject","emailContent","sendEmail","value","SecureToken","Body","then","innerHTML","add","classList","remove","log","hamburger","dropdownMenu","navDots","querySelectorAll","slider","sliderItem","position","dot","dotIndex","style","transform","clientWidth","setActiveDot","index","touchsurface","el","callback","startX","startY","distY","handleswipe","swipedir","addEventListener","touchobj","changedTouches","startTime","pageX","preventDefault","pageY","Date","getTime","distX","elapsedTime","allowedTime","abs","threshold","slideItems","length","dropMenu","show","top","this","toggle"],"mappings":"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","file":"main.js","sourcesContent":["/* SmtpJS.com - v3.0.0 */\r\nconst Email = {\r\n    send: function (a) {\r\n        return new Promise(function (n, e) {\r\n            a.nocache = Math.floor(1e6 * Math.random() + 1), a.Action = \"Send\";\r\n            var t = JSON.stringify(a);\r\n            Email.ajaxPost(\"https://smtpjs.com/v3/smtpjs.aspx?\", t, function (e) {\r\n                n(e)\r\n            })\r\n        })\r\n    }, ajaxPost: function (e, n, t) {\r\n        var a = Email.createCORSRequest(\"POST\", e);\r\n        a.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\"), a.onload = function () {\r\n            var e = a.responseText;\r\n            null != t && t(e)\r\n        }, a.send(n)\r\n    }, ajax: function (e, n) {\r\n        var t = Email.createCORSRequest(\"GET\", e);\r\n        t.onload = function () {\r\n            var e = t.responseText;\r\n            null != n && n(e)\r\n        }, t.send()\r\n    }, createCORSRequest: function (e, n) {\r\n        var t = new XMLHttpRequest;\r\n        return \"withCredentials\" in t ? t.open(e, n, !0) : \"undefined\" != typeof XDomainRequest ? (t = new XDomainRequest).open(e, n) : t = null, t\r\n    }\r\n};\r\nconst email = document.getElementById('mail');\r\nconst buttonSubmit = document.getElementById(\"submit\");\r\nconst messageResult = document.querySelector('.email-message');\r\nlet sendResult = '';\r\nconst yourToken = '840b2860-a6e0-4d8d-9608-a5c76a140b9b'; // enter token to br able to send emails\r\nconst emailToSendFrom = 'd.osinnii@gmail.com';\r\nconst emailSubject = \"Test site\";\r\nconst emailContent = \"Привіт, це перевірка тестового завдання, яке зробив Osinnii Dmytro\";\r\n\r\nbuttonSubmit.addEventListener('click', function (e) {\r\n    if (email.checkValidity()) {\r\n        sendEmail();\r\n        e.preventDefault();\r\n    }\r\n});\r\n\r\n//function which send message on current email(Use your 'SecureToken')\r\n// and shows a success message;\r\nsendEmail = () => {\r\n    Email.send({\r\n        SecureToken: yourToken,\r\n        To: email.value,\r\n        From: emailToSendFrom,\r\n        Subject: emailSubject,\r\n        Body: emailContent\r\n    })\r\n        .then(function () {\r\n            sendResult = 'Email successfully sent';\r\n            messageResult.innerHTML = ('<p>' + sendResult + '</p>');\r\n            messageResult.classList.add('email-active');\r\n            setTimeout(function () {\r\n                messageResult.classList.remove('email-active');\r\n            }, 2000);\r\n            email.value = '';\r\n        })\r\n        .catch(function (e) {\r\n            console.log(e);\r\n        })\r\n};","const hamburger = document.querySelector(\".hamburger\");\r\nconst dropdownMenu = document.getElementById(\"myDropdown\");\r\nconst navDots = document.querySelectorAll('.dot');\r\nconst slider = document.querySelector('.slider');\r\nconst sliderItem = document.querySelectorAll('.slider-item');\r\nlet position = 0;\r\n\r\n//functional for slider implementation\r\nnavDots.forEach(function (dot, dotIndex) {\r\n    dot.addEventListener('click', function (e) {\r\n        slideItems(dot, dotIndex);\r\n    })\r\n});\r\n\r\nfunction slideItems(dot, dotIndex) {\r\n    sliderItem.forEach(function (sliderItem) {\r\n        sliderItem.style.transform = \"translate(\" + (dotIndex * -sliderItem.clientWidth) + \"px)\";\r\n        position = dotIndex;\r\n    });\r\n    setActiveDot(dot, dotIndex);\r\n}\r\n\r\nfunction setActiveDot() {\r\n    navDots.forEach(function (dot, index) {\r\n        if (index === position) {\r\n            dot.classList.add('dot-active')\r\n        } else {\r\n            dot.classList.remove('dot-active')\r\n        }\r\n    })\r\n}\r\n\r\nfunction swipedetect(el, callback) {\r\n    var touchsurface = el,\r\n        swipedir,\r\n        startX,\r\n        startY,\r\n        distX,\r\n        distY,\r\n        threshold = 150,\r\n        restraint = 100,\r\n        allowedTime = 300,\r\n        elapsedTime,\r\n        startTime,\r\n        handleswipe = callback || function (swipedir) {\r\n        };\r\n\r\n    touchsurface.addEventListener('touchstart', function (e) {\r\n        var touchobj = e.changedTouches[0];\r\n        swipedir = 'none';\r\n        dist = 0;\r\n        startX = touchobj.pageX;\r\n        startY = touchobj.pageY;\r\n        startTime = new Date().getTime();\r\n        e.preventDefault()\r\n    }, false);\r\n\r\n    touchsurface.addEventListener('touchmove', function (e) {\r\n        e.preventDefault();\r\n    }, false);\r\n\r\n    touchsurface.addEventListener('touchend', function (e) {\r\n        var touchobj = e.changedTouches[0];\r\n        distX = touchobj.pageX - startX;\r\n        elapsedTime = new Date().getTime() - startTime;\r\n        if (elapsedTime <= allowedTime) {\r\n            if (Math.abs(distX) >= threshold) {\r\n                swipedir = (distX < 0) ? 'left' : 'right';\r\n            }\r\n        }\r\n        handleswipe(swipedir);\r\n        e.preventDefault()\r\n    }, false)\r\n}\r\n\r\nswipedetect(slider, function (swipedir) {\r\n    if (swipedir === 'left' && position < slideItems.length) {\r\n        slideItems(navDots[position], ++position)\r\n    } else if (swipedir === 'right' && position > 0) {\r\n        slideItems(navDots[position], --position)\r\n    }\r\n});\r\n\r\n\r\n// functional for implementing burger menu\r\nlet toggle = false;\r\n\r\nfunction show(dropMenu) {\r\n    if (!toggle) {\r\n        dropMenu.style.top = \"10vh\";\r\n        toggle = !toggle;\r\n    } else {\r\n        dropMenu.style.top = \"-500px\";\r\n        toggle = !toggle;\r\n    }\r\n}\r\n\r\nhamburger.addEventListener(\"click\", function () {\r\n    this.classList.toggle(\"is-active\");\r\n    show(dropdownMenu);\r\n});"]}